import Comments from '@/components/CommentBox/Comments';
import FollowButton from '@/components/FollowButton';
import PostCard from '@/components/PostCard/PostCard';
import SButton from '@/components/SButton';
import { api } from '@/lib/api/api';
import { getToken } from '@/lib/api/ssr';
import { D_Post, D_User, Method } from '@srcbox/library';
import { permanentRedirect } from 'next/navigation';
import React from 'react'

interface Props
{
    params: Promise<{ user_id?: string }>
}

const page: React.FC<Props> = async ({ params }) =>
{
    const { user_id } = await params;
    if (!user_id)
    {
        permanentRedirect("/explore")
    }

    const token = await getToken();

    // Get all posts of this user (in reality, I would want to just fetch as the user scrolls the profile, and
    // each post would have an image generated by my server, however I do not have the time)

    let posts: Array<D_Post> = [];
    let user: D_User | undefined = undefined;

    try
    {
        const req = await api("/posts?user=" + user_id, Method.GET, { token });
        const user_req = await api("/users/" + user_id, Method.GET, { token });

        posts = req.body as Array<D_Post>;
        user = user_req.body as D_User
    }
    catch (e)
    {
        console.error(e);
    }

    return (
        <div className='max-w-screen-lg'>
            <div className='flex flex-row gap-6 p-6 items-start'>
                <img className='h-64 w-64 rounded-xl' src="/pfp.webp" alt='Profile Picture' />

                <div className='flex flex-col gap-4 w-full'>
                    <div className='flex flex-row justify-between w-full'>
                        <h1 className='text-3xl'>{user?.user_name}</h1>
                        <FollowButton target={Number(user_id)} starting_followed={user?.followed || false} />
                    </div>

                    <div className='flex flex-row gap-6 text-lg'>
                        <span>Followers: {user?.followers}</span>
                        <span>Following: {user?.following}</span>
                        <span>Posts: {posts.length}</span>
                    </div>
                    <span>{user?.user_bio}</span>
                </div>
            </div>
            <div className='grid grid-cols-3 max-w-screen-xl mx-auto overflow-x-hidden'>

                {posts.map(p =>
                    <div key={p.post_id} className='h-96'>
                        <PostCard simple post={p} />
                    </div>
                )}
            </div>
        </div>)

}

export default page;
